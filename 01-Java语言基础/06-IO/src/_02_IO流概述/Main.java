package _02_IO流概述;

public class Main {
	
	/*
	 * 一、Stream 是什么
	 * 当我们提到流的时候，很自然地会想到水流，水流有一个很重要的特点就是它在【连续不断地动】，我们并不会把一滩不动的死水称之为流，一定要记住流肯定是动的
	 * 
	 * 对应到代码的世界里，流就是一个【连续不断地动】的二进制数据流。当然如果一堆二进制数据写死在文件里不动，那么我们并不会把它称之为流，它就是一个静态的数据块。只有二进制数据动起来，我们才会把它称之为流：
	 * 比如我们把二进制数据从文件中读取出来的过程中或者把二进制数据写入到文件的过程中，这个过程中的二进制数据就是在流动的，它才是流...
	 * 又比如上传下载文件的过程中，文件的二进制数据也是在流动的，它也是流...
	 * 又比如直播时音频和视频的推流拉流，音频和视频的二进制数据也是在流动的，它也是流...
	 * 一定要记住流肯定是动的
	 */
	
	/*
	 * 二、为什么需要 Stream
	 * 比如我们前面已经学习了 readFile 和 writeFile 这样的 API 来读写文件，但是这类 API 都是一次性把二进制数据给读取和写入的，这仅仅适用于读写小文件和读写过程不需要细节控制的情况
	 * 而且这种情况下的读写二进制数据并没有体现出流的特点，所以这类 API 并不是流式读写文件
	 * 
	 * 倘若一个文件非常大，比如一个视频文件有几个 G，那么我们一次性把这么大的文件读取到应用程序内存中，交给播放器框架去播放显然是不现实的，肯定会导致 OOM
	 * 所以这时候我们就需要用到流式读写文件的 API，它可以把文件分成很多小块，然后一块一块地读取和写入，这样就可以避免一次性把大文件读取到内存中
	 * 这种情况下下的读写二进制数据就体现出来的流的特点————一点一点、连续不断地读写二进制数据
	 * 
	 * 此外如果我们想在读写二进制文件的过程中进行一些细节控制，比如读写到某个位置后暂停读写、下次再从这个位置继续读写来实现断点续传功能；又比如指定读写的开始位置、指定读写的结束位置等操作
	 * 这都得用流式读写文件的 API 才能实现
	 */
	
	/*
	 * 三、Java里的IO流
	 * IO流全称Input/Output Stream，译为输入输出流。首先要知道IO流读取和写入的绝对都是0101这样的二进制数据，
	 * 它不关心你这个二进制数据是文本encode的，还是图片文件、mp3文件、mp4文件encode的，反正它的作用就是读取和写入二进制，
	 * 至于二进制的encode和decode不是它关心的事。
	 * 
	 * 我们的Java应用程序    ---010101010101--->    文件、设备（屏幕）等
	 * 如果我们想从Java应用程序里输出数据（可能输出到文件或者设备），那么就得用输出流Output Stream
	 * 
	 * 我们的Java应用程序    <---010101010101---    文件、设备（屏幕）等
	 * 如果我们想往Java应用程序里写入数据（可能来自文件或者设备），那么就得用输入流Input Stream
	 * 
	 * 也就是说用输入流还是输出流是相对于我们的Java应用程序来说的，Java应用程序想对外输出数据那就用输出流，
	 * Java应用程序想从外读取数据那就用输入流。
	 * 
	 * 注意IO流读写的数据都直接是二进制喔，比如写入的时候只能是写入一个二进制的77和74，那其实真实
	 * 写入的是大写字母M和J，但是我们不能直接写入大写字母M和J。
	 */
	
	/*
	 * 四、IO流的分类，常用的IO流都在java.io包中
	 * 1、字节流（Byte Streams）：所谓字节流是指一次性读取一个字节的二进制数据，输入流为InputStream、输出流为OutputStream，
	 * 它是个万能文件流，主要用来读写文本文件、图片文件、MP3文件、MP4文件等各种文件到磁盘上的文件里
	 * 
	 * 2、字符流（Character Streams）：所谓字节流是指一次性读取一个字符的二进制数据，输入流为Reader、输出流为Writer，
	 * 它是个文本流，只能用来读写文本文件到磁盘上的文件里
	 * 
	 * 3、缓冲留（Buffered Streams）：输入流为BufferedInputStream/BufferedReader、输出流为BufferedOutputStream/BufferedWriter，
	 * 它其实是字节流和字符流的包装流，我们更推荐使用缓冲流
	 * 
	 * 4、数据流（Data Streams）：输入流为DataInputStream、输出流为DataOutputStream，
	 * 它主要用来读写基本数据类型和字符串到磁盘上的文件里
	 * 
	 * 5、对象流（Object Streams）：输入流为ObjectInputStream、输出流为ObjectOutputStream
	 * 它主要用来读写引用类型到磁盘上的文件里，但是要求类必须实现Serializable接口
	 */
	
}