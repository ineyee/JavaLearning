<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ProductDao">
    <select id="get" parameterType="Integer" resultType="bean.ProductBean">
        -- 因为有外键，所以查询时就是一对多表结构的多表查询
        SELECT t_product.id,
               t_product.create_time,
               t_product.update_time,
               t_product.name,
               t_product.price,
               t_product.desc,
               -- 只要把 t_user 表里的字段通过取别名的方式都列出来（注意 userBean 必须是 productBean 里对应对象的属性名，后面的属性名也必须是 userBean 里对应的属性名），MyBatis 就能自动封装成 UserBean 对象
               t_user.id          AS `userBean.id`,
               t_user.create_time AS `userBean.createTime`,
               t_user.update_time AS `userBean.updateTime`,
               t_user.name        AS `userBean.name`,
               t_user.age         AS `userBean.age`,
               t_user.height      AS `userBean.height`,
               t_user.email       AS `userBean.email`
        FROM t_product
                 LEFT JOIN t_user
                           ON t_product.user_id = t_user.id
        WHERE t_product.id = #{id};
    </select>
</mapper>